=========================
はじめてみよう
=========================
Elasticsearchは、高いケーラビリティを持つオープンソースの全文検索解析のエンジンである。

ほぼリアルタイムで、すばやく大きなボリュームのデータを蓄積、検索、解析してくれる。
一般的に、複雑な検索機能と要求をもつ強力なアプリケーションの基礎となるエンジン／技術として使われている。

ここで、Elasticsearchが使われるいくつかのサンプルケースを紹介する.

... skip ... あとで書く


---------------------------------------
基本コンセプト
---------------------------------------
Elasticsearchの核となるコンセプトはいくつかあって、最初からこのコンセプトを理解しておくことは、学習プロセスを容易なものにしてくれるだろう。

ほぼリアルタイム(NRT:Near Real Time)
==============================================
Elasticsearchは、ほぼリアルタイムな検索プラットフォームである。
これが意味することは、ドキュメントをインデックスにする時間から、検索可能になるまでがわずかな遅延（通常、1秒程度）であるということである。

Cluster（クラスター）
==============================================
クラスターは、1つ以上のNode（サーバ）の集合であり、全体のデータを保持して、すべてのノードを横断した検索能力と連合したインデキシングを提供する。
クラスターは、ユニークな名前で識別され、デフォルトでは"elasticsearch"である。

異なる環境で同じクラスタ名を再利用しないことを確認してください。さもないと、間違ったクラスターに参加してしまうかもしれない。
例えば、開発用、ステージング用、商用のクラスタに、logging-dev、logging-stage、logging-prodを使うことができる。

その中に、1つのノードだけを持つクラスタがあることは、適正である。
さらに、独自のユニークなクラスタ名をそれぞれ持つ複数の独立したクラスターを持つかもしれない。

Node（ノード）
==============================================
ノードは、クラスターの一部となる１つのサーバーのことであり、データを保存したり、クラスタのインデキシングや検索に参加したりする。
クラスタと同様に、ノードは名前で識別される。デフォルトでは、ランダムなUUID(Universally Unique IDentifier)であり、開始時に割り当てられる。
もちろん、付けたい名前を定義することもできる。ノード名は、クラスター内のノードを識別するという管理目的として、とても重要である。

ノードは、特定のクラスタに参加するように設定される。
デフォルトでは、各ノードは elastcisearch と名付けられたクラスターに参加するように設定されている。
ノードはお互いに発見することができるので、自動的に形成して、クラスタに参加する。

１つのクラスターでは、多くノードを持つことができる。
さらに、ネットワーク上で現在実行中の他のElastic nodeがない場合に、シングルノードで開始する。デフォルトでは、elasticsearchという１つのノードを持つクラスターが形成される。

Index（インデックス）
==============================================
インデックスは、ある程度同様の特性を持つドキュメントの集合である。
例えば、カスタマーデータのためのインデックスや、プロダクトカタログのためのインデックス、注文データのためのインデックスを持つことができる。
インデックスもまた名前で識別される（すべて小文字であること！！）。
そして、この名前は、インデックスの中にあるドキュメントに対して、インデキシングや検索、更新、削除操作を実行する際に、インデックスへの参照に使われる。

Tpye（タイプ）
==============================================

.. warning::

   Deprecated in 6.0.0

インデックスの論理的なカテゴリ/パーティションに使われるTypeは、同じインデックス内に異なる種類のドキュメントを格納する。
例えば、１つのタイプはユーザー、もう１つのタイプはブログ記事とか。
インデックス内に複数の種類を作成することはもはや不可能である。Typeの全体のコンセプトは、最新バージョンで削除されるだろう。



Document（ドキュメント）
==============================================
Documentは、インデックスされる情報の基本的な単位である。
例えば、一人のカスタマーのドキュメントを持つことができる。他のドキュメントには１つの商品を、またもう１つのドキュメントには１つの注文を、といった具合に。
そして、このDocumentは、JSONで表現される。



Shareds & Replicas（シャードとレプリカ）
==============================================




.. admonition:: 要件
   :class: note

   Java8を要求。Java9は未サポート。Oracle JDK or OpenJDK を使う。
